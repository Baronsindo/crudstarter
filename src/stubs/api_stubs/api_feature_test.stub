<?php

namespace Tests\Feature;

use App\Models\{{modelName}};
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class {{modelName}}ApiTest extends TestCase
{
    use RefreshDatabase;

     //ADDD THISSS in TestCase
           /* public function isLoggedIn()
            {
                $user = User::factory()->create();
                $this->actingAs($user);
            }
            */

    /** @test */
    public function {{modelNameSingularLowerCase}}_can_be_created_via_api() :void
    {
        $this->isLoggedIn();

        $this->postJson('api/{{modelNamePluralLowerCase}}', [
            {{createTestFields}}
        ])->assertStatus(201);

        $this->assertCount(1, {{modelName}}::all());
    }

    /** @test */
    public function {{modelNameSingularLowerCase}}_can_be_deleted_via_api() :void
    {
        $this->isLoggedIn();

        //storing {{modelNameSingularLowerCase}}
        $this->postJson('api/{{modelNamePluralLowerCase}}', [
            {{createTestFields}}
        ]);

        $this->assertCount(1, {{modelName}}::all());

        //deleting stored {{modelNameSingularLowerCase}}
        ${{modelNameSingularLowerCase}} = {{modelName}}::first();
        ${{modelNameSingularLowerCase}}->delete('/api/{{modelNamePluralLowerCase}}/' . ${{modelNameSingularLowerCase}}->id);

        $this->assertCount(0, {{modelName}}::all());
    }

    /** @test */
    public function {{modelNameSingularLowerCase}}_can_be_updated_via_api() :void
    {
        $this->withoutExceptionHandling();
        $this->isLoggedIn();

        //storing {{modelNameSingularLowerCase}}
        $this->postJson('api/{{modelNamePluralLowerCase}}', [
            {{createTestFields}}
        ]);
        $this->assertCount(1, {{modelName}}::all());

        //updating stored {{modelNameSingularLowerCase}}
        ${{modelNameSingularLowerCase}} = {{modelName}}::first();

        $this->patchJson('/api/{{modelNamePluralLowerCase}}/' . ${{modelNameSingularLowerCase}}->id, [
            {{updateTestFields}}
        ])->assertStatus(200);

        $this->assertNotEquals(${{modelNameSingularLowerCase}}->{{firstFieldForUpdate}}, {{modelName}}::first()->{{firstFieldForUpdate}});

        $this->assertCount(1, {{modelName}}::all());
    }
}
